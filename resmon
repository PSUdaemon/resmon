#!/usr/bin/perl

use lib '/opt/resmon/lib';

use strict;
use Time::HiRes qw( gettimeofday tv_interval sleep );
use POSIX qw( setsid );
use Getopt::Long;
use Data::Dumper;
use vars qw($config_file $debug $status_file $interface $port $config);

use Resmon::Config;
use Resmon::ExtComm;
use Resmon::Status;
use Resmon::Module;

GetOptions(
  "i=s" => \$interface,
  "p=i" => \$port,
  "c=s" => \$config_file,
  "d"   => \$debug,
  "f=s" => \$status_file,
);

$config_file ||= 'resmon.conf';
die "Cannot open configuration file: $config_file" unless (-r $config_file);

sub configure {
  $config = Resmon::Config->new($config_file);
  $config->{statusfile} = $status_file if($status_file);
}

$SIG{'HUP'} = \&configure;
configure();

my $sigint = 0;
sub sigint_handler { $sigint = 1; }
$SIG{'INT'} = \&sigint_handler;

my $rmlast = undef;
sub wait_interval {
  $rmlast = [gettimeofday] unless defined($rmlast);
  my $elapsed = $config->{interval} - tv_interval($rmlast);
  if($elapsed > 0) {
    sleep($elapsed);
  }
  $rmlast = [gettimeofday];
}

my $list = [];
my $status = Resmon::Status->new($config->{statusfile});
$status->open();
$status->serve_http_on($interface, $port) if($port);

unless($debug) {
  fork && exit;
  setsid;
  close(STDIN);
  close(STDOUT);
  close(STDERR);
  fork && exit;
}

while(1) {
  while(my($module_name, $mod_configs) = each %{$config->{Module}}) {
    my $coderef = Resmon::Module::fetch_monitor($module_name);
    foreach my $monobj (@$mod_configs) {
      my $check_rv = 'BAD',
      my $check_mess = 'no data';
      if($coderef) {
        eval { ($check_rv, $check_mess) = $coderef->($monobj); };
      } else {
        eval { ($check_rv, $check_mess) = $monobj->handler(); };
      }
      if($@) {
        $status->store($module_name,$monobj->{'object'},'BAD',$@);
      } else {
        $status->store($module_name,$monobj->{'object'},$check_rv,$check_mess);
      }
    }
  }
  $status->close();
  die "Exiting.\n" if($sigint);
  wait_interval();
  die "Exiting.\n" if($sigint);
  print "\n---- ".localtime(time)."----------\n"
   unless $status->open();
}

